---
- name: create "Booting Node {{ node_number}}" message
  shell: >
    figlet "Booting Node {{ node_number }}" 2>/dev/null || echo "Booting Node {{ node_number }}"
  register: figlet_result

- name: print "Booting Node {{ node_number }}"
  debug:
    msg: "{{ figlet_result.stdout }}"

- name: boot Harvester Node {{ node_number }}
  shell: >
    vagrant up harvester_node_{{ node_number }}
  register: harvester_node_boot_result

- name: get the IP address of Harvester Node {{ node_number }}
  shell: |
    vagrant ssh-config harvester_node_{{ node_number }} 2>/dev/null | grep HostName | awk '{ print $2 }'
  register: get_harvester_node_ip_result
  until: get_harvester_node_ip_result.stdout != ""
  retries: 10
  delay: 60

- name: set Harvester Node IP fact
  set_fact:
    harvester_node_ip: "{{ get_harvester_node_ip_result.stdout }}"

- name: wait for Harvester Node {{ harvester_node_ip }} to get ready
  uri:
    url: "https://{{ harvester_node_ip }}:30443/v1-public/auth-modes"
    validate_certs: no
    status_code: 200
  register: auth_modes_lookup_result
  until: auth_modes_lookup_result.status == 200
  retries: 20
  delay: 60
